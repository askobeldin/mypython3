
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '954EE22A79DC429CE06F75ED53192C33'
    
_lr_action_items = {'LPAREN':([0,1,5,9,10,11,12,14,],[1,1,1,1,1,1,1,1,]),'DIVIDE':([2,4,6,7,8,13,15,16,17,18,19,20,],[10,-9,-10,10,-10,-7,-8,-5,-6,10,10,10,]),'$end':([2,3,4,6,8,13,15,16,17,18,19,20,],[-2,0,-9,-10,-10,-7,-8,-5,-6,-3,-4,-1,]),'RPAREN':([4,7,8,13,15,16,17,18,19,],[-9,15,-10,-7,-8,-5,-6,-3,-4,]),'EQUALS':([6,],[14,]),'TIMES':([2,4,6,7,8,13,15,16,17,18,19,20,],[9,-9,-10,9,-10,-7,-8,-5,-6,9,9,9,]),'NUMBER':([0,1,5,9,10,11,12,14,],[4,4,4,4,4,4,4,4,]),'MINUS':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,],[5,5,12,-9,5,-10,12,-10,5,5,5,5,-7,5,-8,-5,-6,-3,-4,12,]),'PLUS':([2,4,6,7,8,13,15,16,17,18,19,20,],[11,-9,-10,11,-10,-7,-8,-5,-6,-3,-4,11,]),'NAME':([0,1,5,9,10,11,12,14,],[6,8,8,8,8,8,8,8,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,1,5,9,10,11,12,14,],[2,7,13,16,17,18,19,20,]),'statement':([0,],[3,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> NAME EQUALS expression','statement',3,'p_statement_assign','calc1.py',65),
  ('statement -> expression','statement',1,'p_statement_expr','calc1.py',69),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','calc1.py',73),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','calc1.py',74),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','calc1.py',75),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','calc1.py',76),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','calc1.py',83),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','calc1.py',87),
  ('expression -> NUMBER','expression',1,'p_expression_number','calc1.py',91),
  ('expression -> NAME','expression',1,'p_expression_name','calc1.py',95),
]
